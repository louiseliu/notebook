* List
** split to n part
   + python version
    #+BEGIN_SRC python
    def list_split(li, n):
	if n <= 0:
	    raise Exception

	return map(
	    lambda x: ",".join(
		map(str,
		    li[x * n : x * n + n]
		)
	    ),
	    range(len(li) / n + 1)
	)
    #+END_SRC

* Date Time
** get next month 's datetime
  + python version
    #+BEGIN_SRC python
    def get_next_month_datetime(cur_datetime):
	try:
	    return cur_datetime.replace(month=cur_datetime.month + 1)
	except ValueError:
	    if cur_datetime.month == 12:
		return cur_datetime.replace(
		    year=cur_datetime.year + 1, month=1
		)
	    else:
		# next month is too short to have "same date"
		# pick your own heuristic, or re-raise the exception:
		raise ValueError
    #+END_SRC

* Shell Command
** alias 设置小技巧
   在设置alias时，为了避免重复输入一些东西，可以将一些固定的参数固化下来。然后使用$@让它可以接受任何其他的参数
   例如经常会用到查看某个名字的进程是否存在可以这么设置
   #+begin_src shell
   alias psgerp='ps aux | grep $@'
   #+end_src
   这样当输入 psgrep python 时， 就会自动将参数套用至 $@ 的位置
   
** pm-suspend 在命令行下休眠待机
   首先需要安装 powermanagement-interface
   #+begin_src shell
   $ sudo apt-get install powermanagement-interface
   #+end_src
   使用以下命令来待机，休眠（休眠需要swap分区大小大于内存大小）
   #+begin_src shell
   $ sudo pm-suspend
   $ sudo pm-hibernate
   #+end_src

** fuser 命令查看进程信息
   fuser is a UNIX command used to show which processes are using a specified file, file system,
   or unix socket. For example, to check process IDs and users accessing a USB drive:
   #+begin_src shell
   # fuser -m -u /mnt/usb1
   /mnt/usb1:   1347c(root)  1348c(guido)  1349c(guido)

   # fuser -v -n tcp 80
			USER        PID ACCESS COMMAND
   80/tcp:              root       3067 F.... (root)httpd
		      apache     3096 F.... (apache)httpd
		      apache     3097 F.... (apache)httpd

   # fuser -k -n tcp 8000       # kills all processes at port 8000
   #+end_src

** find 命令查找 文件目录
   + find all python files in some folder that modified in recent 10 days
     使用 -mtime 参数要注意后面跟的数字要加上 - 否则会显示前多少天修改的文件
     #+begin_src shell
     $ find /path/to/somefolder -name '*.py' -mtime -10
     #+end_src

   + find all python files in some folder that contain some string
     使用管道 和 xargs grep 在指定目录中查找包含相关字符串的文件
     #+begin_src shell
     $ find /path/to/somefolder -name '*.py' | xargs grep "some string"
     #+end_src

** rsync 命令同步 using rsync to sync folders from remote machine
   + sometimes you need to sync a folder with a remote machine. using rsync is very simple.
     #+BEGIN_SRC shell
     $ rsync -ave ssh user@remote_host:/path/to/remote_folder /path/to/local_folder
     #+END_SRC

** dmidecode 查看系统信息 get how many slot of MEM in machine
   + dmidecode has all bios info. you can grep out everything about the machine.
     #+BEGIN_SRC shell
     # MEM info detail
     $ sudo /usr/sbin/dmidecode | grep -A 16 "Memory Device"

     # MEM info summary
     $ sudo /usr/sbin/dmidecode | grep -A 16 "Memory Device" | grep -E "Size|Locator" | grep -v Bank

     # CPU info detail
     $ sudo /usr/sbin/dmidecode | grep -A55 'Processor Information'

     # CPU info summary
     $ sudo /usr/sbin/dmidecode | grep -A55 'Processor Information' | grep -E "Socket|Version"

     # On Board Device
     $ sudo /usr/sbin/dmidecode | grep -A3 "On Board Device"
     #+END_SRC
